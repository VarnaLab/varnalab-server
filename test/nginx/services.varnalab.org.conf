
server {
  listen 443 ssl;

  server_name services.varnalab.org;

  access_log /var/log/nginx/services.varnalab.org-access.log;
  error_log /var/log/nginx/services.varnalab.org-error.log debug;


  ################ SSL ################

  ssl_certificate /etc/letsencrypt/live/services.varnalab.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/services.varnalab.org/privkey.pem;
  add_header Strict-Transport-Security max-age=15768000;


  ################ Locations ################

  # webroot plugin for letsencrypt
  location ^~ /.well-known {
    allow all;
  }

  # node
  location /grant {
    proxy_pass http://varnalab/grant/;
    # output
    proxy_hide_header X-Powered-By;
    # invalidate API requests always
    add_header Cache-Control 'no-cache';
  }
  location /invite {
    proxy_pass http://varnalab/invite/;
    # output
    proxy_hide_header X-Powered-By;
    # invalidate API requests always
    add_header Cache-Control 'no-cache';
  }
  location /varnalab/api {
    proxy_pass http://varnalab/varnalab/api/;
    # output
    add_header Access-Control-Allow-Origin '*';
    proxy_hide_header X-Powered-By;
    # invalidate API requests always
    add_header Cache-Control 'no-cache';
  }

  # varnalab - index.html
  location /varnalab/app {
    root [/path/to/serve/location/];
    try_files /varnalab/app/assets/build/index.html =404;
    # invalidate always
    add_header Cache-Control 'no-cache';
  }
  # varnalab - manifest.json
  location /varnalab/app/manifest.json {
    root [/path/to/serve/location/];
    try_files /varnalab/app/manifest.json =404;
    # invalidate always
    add_header Cache-Control 'no-cache';
  }
  # varnalab - static files
  location /varnalab/app/assets {
    root [/path/to/serve/location/];
    try_files $uri $uri;
    add_header Access-Control-Allow-Origin '*';
    # invalidate always
    add_header Cache-Control 'no-cache';
  }
}

# redirect to HTTPS
server {
  listen 80;
  server_name services.varnalab.org;
  return 301 https://$host$request_uri;
}
